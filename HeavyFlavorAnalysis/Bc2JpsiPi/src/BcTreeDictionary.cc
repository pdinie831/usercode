//
// File generated by rootcint at Tue Aug 20 14:00:41 2013

// Do NOT change. Changes will be lost next time file is generated
//

#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "BcTreeDictionary.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void BcTreeCand_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_BcTreeCand(void *p = 0);
   static void *newArray_BcTreeCand(Long_t size, void *p);
   static void delete_BcTreeCand(void *p);
   static void deleteArray_BcTreeCand(void *p);
   static void destruct_BcTreeCand(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::BcTreeCand*)
   {
      ::BcTreeCand *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::BcTreeCand >(0);
      static ::ROOT::TGenericClassInfo 
         instance("BcTreeCand", ::BcTreeCand::Class_Version(), "./../interface/BcTree.h", 18,
                  typeid(::BcTreeCand), DefineBehavior(ptr, ptr),
                  &::BcTreeCand::Dictionary, isa_proxy, 0,
                  sizeof(::BcTreeCand) );
      instance.SetNew(&new_BcTreeCand);
      instance.SetNewArray(&newArray_BcTreeCand);
      instance.SetDelete(&delete_BcTreeCand);
      instance.SetDeleteArray(&deleteArray_BcTreeCand);
      instance.SetDestructor(&destruct_BcTreeCand);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::BcTreeCand*)
   {
      return GenerateInitInstanceLocal((::BcTreeCand*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::BcTreeCand*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void BcTreeGENCand_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_BcTreeGENCand(void *p = 0);
   static void *newArray_BcTreeGENCand(Long_t size, void *p);
   static void delete_BcTreeGENCand(void *p);
   static void deleteArray_BcTreeGENCand(void *p);
   static void destruct_BcTreeGENCand(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::BcTreeGENCand*)
   {
      ::BcTreeGENCand *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::BcTreeGENCand >(0);
      static ::ROOT::TGenericClassInfo 
         instance("BcTreeGENCand", ::BcTreeGENCand::Class_Version(), "./../interface/BcTree.h", 132,
                  typeid(::BcTreeGENCand), DefineBehavior(ptr, ptr),
                  &::BcTreeGENCand::Dictionary, isa_proxy, 0,
                  sizeof(::BcTreeGENCand) );
      instance.SetNew(&new_BcTreeGENCand);
      instance.SetNewArray(&newArray_BcTreeGENCand);
      instance.SetDelete(&delete_BcTreeGENCand);
      instance.SetDeleteArray(&deleteArray_BcTreeGENCand);
      instance.SetDestructor(&destruct_BcTreeGENCand);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::BcTreeGENCand*)
   {
      return GenerateInitInstanceLocal((::BcTreeGENCand*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::BcTreeGENCand*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void JpsiCand_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_JpsiCand(void *p = 0);
   static void *newArray_JpsiCand(Long_t size, void *p);
   static void delete_JpsiCand(void *p);
   static void deleteArray_JpsiCand(void *p);
   static void destruct_JpsiCand(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::JpsiCand*)
   {
      ::JpsiCand *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::JpsiCand >(0);
      static ::ROOT::TGenericClassInfo 
         instance("JpsiCand", ::JpsiCand::Class_Version(), "./../interface/BcTree.h", 193,
                  typeid(::JpsiCand), DefineBehavior(ptr, ptr),
                  &::JpsiCand::Dictionary, isa_proxy, 0,
                  sizeof(::JpsiCand) );
      instance.SetNew(&new_JpsiCand);
      instance.SetNewArray(&newArray_JpsiCand);
      instance.SetDelete(&delete_JpsiCand);
      instance.SetDeleteArray(&deleteArray_JpsiCand);
      instance.SetDestructor(&destruct_JpsiCand);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::JpsiCand*)
   {
      return GenerateInitInstanceLocal((::JpsiCand*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::JpsiCand*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void BcTreeHeader_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_BcTreeHeader(void *p = 0);
   static void *newArray_BcTreeHeader(Long_t size, void *p);
   static void delete_BcTreeHeader(void *p);
   static void deleteArray_BcTreeHeader(void *p);
   static void destruct_BcTreeHeader(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::BcTreeHeader*)
   {
      ::BcTreeHeader *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::BcTreeHeader >(0);
      static ::ROOT::TGenericClassInfo 
         instance("BcTreeHeader", ::BcTreeHeader::Class_Version(), "./../interface/BcTree.h", 244,
                  typeid(::BcTreeHeader), DefineBehavior(ptr, ptr),
                  &::BcTreeHeader::Dictionary, isa_proxy, 0,
                  sizeof(::BcTreeHeader) );
      instance.SetNew(&new_BcTreeHeader);
      instance.SetNewArray(&newArray_BcTreeHeader);
      instance.SetDelete(&delete_BcTreeHeader);
      instance.SetDeleteArray(&deleteArray_BcTreeHeader);
      instance.SetDestructor(&destruct_BcTreeHeader);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::BcTreeHeader*)
   {
      return GenerateInitInstanceLocal((::BcTreeHeader*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::BcTreeHeader*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void BcTree_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_BcTree(void *p = 0);
   static void *newArray_BcTree(Long_t size, void *p);
   static void delete_BcTree(void *p);
   static void deleteArray_BcTree(void *p);
   static void destruct_BcTree(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::BcTree*)
   {
      ::BcTree *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::BcTree >(0);
      static ::ROOT::TGenericClassInfo 
         instance("BcTree", ::BcTree::Class_Version(), "./../interface/BcTree.h", 289,
                  typeid(::BcTree), DefineBehavior(ptr, ptr),
                  &::BcTree::Dictionary, isa_proxy, 0,
                  sizeof(::BcTree) );
      instance.SetNew(&new_BcTree);
      instance.SetNewArray(&newArray_BcTree);
      instance.SetDelete(&delete_BcTree);
      instance.SetDeleteArray(&deleteArray_BcTree);
      instance.SetDestructor(&destruct_BcTree);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::BcTree*)
   {
      return GenerateInitInstanceLocal((::BcTree*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::BcTree*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *BcTreeCand::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *BcTreeCand::Class_Name()
{
   return "BcTreeCand";
}

//______________________________________________________________________________
const char *BcTreeCand::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::BcTreeCand*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int BcTreeCand::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::BcTreeCand*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void BcTreeCand::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::BcTreeCand*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *BcTreeCand::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::BcTreeCand*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *BcTreeGENCand::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *BcTreeGENCand::Class_Name()
{
   return "BcTreeGENCand";
}

//______________________________________________________________________________
const char *BcTreeGENCand::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::BcTreeGENCand*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int BcTreeGENCand::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::BcTreeGENCand*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void BcTreeGENCand::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::BcTreeGENCand*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *BcTreeGENCand::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::BcTreeGENCand*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *JpsiCand::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *JpsiCand::Class_Name()
{
   return "JpsiCand";
}

//______________________________________________________________________________
const char *JpsiCand::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::JpsiCand*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int JpsiCand::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::JpsiCand*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void JpsiCand::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::JpsiCand*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *JpsiCand::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::JpsiCand*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *BcTreeHeader::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *BcTreeHeader::Class_Name()
{
   return "BcTreeHeader";
}

//______________________________________________________________________________
const char *BcTreeHeader::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::BcTreeHeader*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int BcTreeHeader::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::BcTreeHeader*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void BcTreeHeader::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::BcTreeHeader*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *BcTreeHeader::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::BcTreeHeader*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *BcTree::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *BcTree::Class_Name()
{
   return "BcTree";
}

//______________________________________________________________________________
const char *BcTree::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::BcTree*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int BcTree::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::BcTree*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void BcTree::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::BcTree*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *BcTree::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::BcTree*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void BcTreeCand::Streamer(TBuffer &R__b)
{
   // Stream an object of class BcTreeCand.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      BcPi_.Streamer(R__b);
      BcK_.Streamer(R__b);
      Mu1_.Streamer(R__b);
      Mu2_.Streamer(R__b);
      Jpsi_.Streamer(R__b);
      Pi_.Streamer(R__b);
      JpsiV_.Streamer(R__b);
      R__b >> Els_;
      R__b >> Cos_;
      R__b >> ClS_;
      R__b >> ClJpsi_;
      R__b.ReadStaticArray((double*)BS_);
      R__b.ReadStaticArray((double*)VtxS_);
      R__b.ReadStaticArray((double*)BSCovariance_);
      R__b.ReadStaticArray((double*)SVCovariance_);
      R__b >> IP3D_;
      R__b >> IPbs_;
      R__b >> sIP3D_;
      R__b >> sIPbs_;
      R__b.ReadStaticArray((double*)MatchMu_);
      R__b >> MatchPi_;
      R__b >> PiCh_;
      R__b.ReadStaticArray((int*)MuCh_);
      R__b >> ElsigJpsi_;
      R__b >> CosJpsi_;
      R__b >> TrkNHits_;
      R__b >> TrkPixelHits_;
      R__b >> TrkChi2_;
      R__b.ReadStaticArray((double*)HltMatch_);
      R__b.CheckByteCount(R__s, R__c, BcTreeCand::IsA());
   } else {
      R__c = R__b.WriteVersion(BcTreeCand::IsA(), kTRUE);
      TObject::Streamer(R__b);
      BcPi_.Streamer(R__b);
      BcK_.Streamer(R__b);
      Mu1_.Streamer(R__b);
      Mu2_.Streamer(R__b);
      Jpsi_.Streamer(R__b);
      Pi_.Streamer(R__b);
      JpsiV_.Streamer(R__b);
      R__b << Els_;
      R__b << Cos_;
      R__b << ClS_;
      R__b << ClJpsi_;
      R__b.WriteArray(BS_, 3);
      R__b.WriteArray(VtxS_, 3);
      R__b.WriteArray(BSCovariance_, 9);
      R__b.WriteArray(SVCovariance_, 9);
      R__b << IP3D_;
      R__b << IPbs_;
      R__b << sIP3D_;
      R__b << sIPbs_;
      R__b.WriteArray(MatchMu_, 2);
      R__b << MatchPi_;
      R__b << PiCh_;
      R__b.WriteArray(MuCh_, 2);
      R__b << ElsigJpsi_;
      R__b << CosJpsi_;
      R__b << TrkNHits_;
      R__b << TrkPixelHits_;
      R__b << TrkChi2_;
      R__b.WriteArray(HltMatch_, 4);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void BcTreeCand::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class BcTreeCand.
      TClass *R__cl = ::BcTreeCand::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BcPi_", &BcPi_);
      R__insp.InspectMember(BcPi_, "BcPi_.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BcK_", &BcK_);
      R__insp.InspectMember(BcK_, "BcK_.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mu1_", &Mu1_);
      R__insp.InspectMember(Mu1_, "Mu1_.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mu2_", &Mu2_);
      R__insp.InspectMember(Mu2_, "Mu2_.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Jpsi_", &Jpsi_);
      R__insp.InspectMember(Jpsi_, "Jpsi_.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Pi_", &Pi_);
      R__insp.InspectMember(Pi_, "Pi_.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "JpsiV_", &JpsiV_);
      R__insp.InspectMember(JpsiV_, "JpsiV_.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Els_", &Els_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Cos_", &Cos_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ClS_", &ClS_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ClJpsi_", &ClJpsi_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BS_[3]", BS_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "VtxS_[3]", VtxS_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BSCovariance_[9]", BSCovariance_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SVCovariance_[9]", SVCovariance_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "IP3D_", &IP3D_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "IPbs_", &IPbs_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sIP3D_", &sIP3D_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sIPbs_", &sIPbs_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MatchMu_[2]", MatchMu_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MatchPi_", &MatchPi_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PiCh_", &PiCh_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MuCh_[2]", MuCh_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ElsigJpsi_", &ElsigJpsi_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "CosJpsi_", &CosJpsi_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkNHits_", &TrkNHits_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkPixelHits_", &TrkPixelHits_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrkChi2_", &TrkChi2_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "HltMatch_[4]", HltMatch_);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_BcTreeCand(void *p) {
      return  p ? new(p) ::BcTreeCand : new ::BcTreeCand;
   }
   static void *newArray_BcTreeCand(Long_t nElements, void *p) {
      return p ? new(p) ::BcTreeCand[nElements] : new ::BcTreeCand[nElements];
   }
   // Wrapper around operator delete
   static void delete_BcTreeCand(void *p) {
      delete ((::BcTreeCand*)p);
   }
   static void deleteArray_BcTreeCand(void *p) {
      delete [] ((::BcTreeCand*)p);
   }
   static void destruct_BcTreeCand(void *p) {
      typedef ::BcTreeCand current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::BcTreeCand

//______________________________________________________________________________
void BcTreeGENCand::Streamer(TBuffer &R__b)
{
   // Stream an object of class BcTreeGENCand.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      BcPi_.Streamer(R__b);
      Mu1_.Streamer(R__b);
      Mu2_.Streamer(R__b);
      JPsi_.Streamer(R__b);
      Pi_.Streamer(R__b);
      R__b >> El_;
      R__b >> Cos_;
      R__b.ReadStaticArray((double*)VtxS_);
      R__b.ReadStaticArray((double*)BS_);
      R__b >> PiCh_;
      R__b.ReadStaticArray((int*)MuCh_);
      R__b.CheckByteCount(R__s, R__c, BcTreeGENCand::IsA());
   } else {
      R__c = R__b.WriteVersion(BcTreeGENCand::IsA(), kTRUE);
      TObject::Streamer(R__b);
      BcPi_.Streamer(R__b);
      Mu1_.Streamer(R__b);
      Mu2_.Streamer(R__b);
      JPsi_.Streamer(R__b);
      Pi_.Streamer(R__b);
      R__b << El_;
      R__b << Cos_;
      R__b.WriteArray(VtxS_, 3);
      R__b.WriteArray(BS_, 3);
      R__b << PiCh_;
      R__b.WriteArray(MuCh_, 2);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void BcTreeGENCand::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class BcTreeGENCand.
      TClass *R__cl = ::BcTreeGENCand::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BcPi_", &BcPi_);
      R__insp.InspectMember(BcPi_, "BcPi_.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mu1_", &Mu1_);
      R__insp.InspectMember(Mu1_, "Mu1_.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mu2_", &Mu2_);
      R__insp.InspectMember(Mu2_, "Mu2_.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "JPsi_", &JPsi_);
      R__insp.InspectMember(JPsi_, "JPsi_.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Pi_", &Pi_);
      R__insp.InspectMember(Pi_, "Pi_.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "El_", &El_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Cos_", &Cos_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "VtxS_[3]", VtxS_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "BS_[3]", BS_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PiCh_", &PiCh_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MuCh_[2]", MuCh_);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_BcTreeGENCand(void *p) {
      return  p ? new(p) ::BcTreeGENCand : new ::BcTreeGENCand;
   }
   static void *newArray_BcTreeGENCand(Long_t nElements, void *p) {
      return p ? new(p) ::BcTreeGENCand[nElements] : new ::BcTreeGENCand[nElements];
   }
   // Wrapper around operator delete
   static void delete_BcTreeGENCand(void *p) {
      delete ((::BcTreeGENCand*)p);
   }
   static void deleteArray_BcTreeGENCand(void *p) {
      delete [] ((::BcTreeGENCand*)p);
   }
   static void destruct_BcTreeGENCand(void *p) {
      typedef ::BcTreeGENCand current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::BcTreeGENCand

//______________________________________________________________________________
void BcTreeHeader::Streamer(TBuffer &R__b)
{
   // Stream an object of class BcTreeHeader.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      R__b >> NEve_;
      R__b >> Run_;
      R__b >> LBlk_;
      R__b >> Event_;
      R__b >> NumBc_;
      R__b >> Ntrk_;
      R__b >> Nprim_;
      R__b >> TrueNI_;
      R__b >> TriggerBit_;
      R__b >> GoodTrkSize_;
      R__b.CheckByteCount(R__s, R__c, BcTreeHeader::IsA());
   } else {
      R__c = R__b.WriteVersion(BcTreeHeader::IsA(), kTRUE);
      R__b << NEve_;
      R__b << Run_;
      R__b << LBlk_;
      R__b << Event_;
      R__b << NumBc_;
      R__b << Ntrk_;
      R__b << Nprim_;
      R__b << TrueNI_;
      R__b << TriggerBit_;
      R__b << GoodTrkSize_;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void BcTreeHeader::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class BcTreeHeader.
      TClass *R__cl = ::BcTreeHeader::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NEve_", &NEve_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Run_", &Run_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "LBlk_", &LBlk_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Event_", &Event_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NumBc_", &NumBc_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Ntrk_", &Ntrk_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Nprim_", &Nprim_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrueNI_", &TrueNI_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TriggerBit_", &TriggerBit_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "GoodTrkSize_", &GoodTrkSize_);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_BcTreeHeader(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::BcTreeHeader : new ::BcTreeHeader;
   }
   static void *newArray_BcTreeHeader(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::BcTreeHeader[nElements] : new ::BcTreeHeader[nElements];
   }
   // Wrapper around operator delete
   static void delete_BcTreeHeader(void *p) {
      delete ((::BcTreeHeader*)p);
   }
   static void deleteArray_BcTreeHeader(void *p) {
      delete [] ((::BcTreeHeader*)p);
   }
   static void destruct_BcTreeHeader(void *p) {
      typedef ::BcTreeHeader current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::BcTreeHeader

//______________________________________________________________________________
void JpsiCand::Streamer(TBuffer &R__b)
{
   // Stream an object of class JpsiCand.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      Mu1_.Streamer(R__b);
      Mu2_.Streamer(R__b);
      Jpsi_.Streamer(R__b);
      R__b >> Els_;
      R__b >> Cos_;
      R__b >> ClS_;
      R__b.ReadStaticArray((double*)VtxJ_);
      R__b.ReadStaticArray((double*)MatchMu_);
      R__b.ReadStaticArray((int*)MuCh_);
      R__b.CheckByteCount(R__s, R__c, JpsiCand::IsA());
   } else {
      R__c = R__b.WriteVersion(JpsiCand::IsA(), kTRUE);
      TObject::Streamer(R__b);
      Mu1_.Streamer(R__b);
      Mu2_.Streamer(R__b);
      Jpsi_.Streamer(R__b);
      R__b << Els_;
      R__b << Cos_;
      R__b << ClS_;
      R__b.WriteArray(VtxJ_, 3);
      R__b.WriteArray(MatchMu_, 2);
      R__b.WriteArray(MuCh_, 2);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void JpsiCand::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class JpsiCand.
      TClass *R__cl = ::JpsiCand::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mu1_", &Mu1_);
      R__insp.InspectMember(Mu1_, "Mu1_.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mu2_", &Mu2_);
      R__insp.InspectMember(Mu2_, "Mu2_.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Jpsi_", &Jpsi_);
      R__insp.InspectMember(Jpsi_, "Jpsi_.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Els_", &Els_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Cos_", &Cos_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ClS_", &ClS_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "VtxJ_[3]", VtxJ_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MatchMu_[2]", MatchMu_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MuCh_[2]", MuCh_);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_JpsiCand(void *p) {
      return  p ? new(p) ::JpsiCand : new ::JpsiCand;
   }
   static void *newArray_JpsiCand(Long_t nElements, void *p) {
      return p ? new(p) ::JpsiCand[nElements] : new ::JpsiCand[nElements];
   }
   // Wrapper around operator delete
   static void delete_JpsiCand(void *p) {
      delete ((::JpsiCand*)p);
   }
   static void deleteArray_JpsiCand(void *p) {
      delete [] ((::JpsiCand*)p);
   }
   static void destruct_JpsiCand(void *p) {
      typedef ::JpsiCand current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::JpsiCand

//______________________________________________________________________________
void BcTree::Streamer(TBuffer &R__b)
{
   // Stream an object of class BcTree.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      fBcTreeArrayCand->Streamer(R__b);
      fBcTreeJpsiArrayCand->Streamer(R__b);
      fBcTreeHeader.Streamer(R__b);
      fBcTreeGENCand.Streamer(R__b);
      R__b >> NBcTreeCand;
      R__b >> NJpsiCand;
      R__b >> MaxPt;
      R__b >> JPsiPxOld;
      R__b >> JPsiPyOld;
      R__b >> JPsiPzOld;
      R__b >> NumJPsi;
      R__b >> fMaxPtCand;
      R__b >> fIsValid;
      R__b >> jIsValid;
      R__b.CheckByteCount(R__s, R__c, BcTree::IsA());
   } else {
      R__c = R__b.WriteVersion(BcTree::IsA(), kTRUE);
      TObject::Streamer(R__b);
      fBcTreeArrayCand->Streamer(R__b);
      fBcTreeJpsiArrayCand->Streamer(R__b);
      fBcTreeHeader.Streamer(R__b);
      fBcTreeGENCand.Streamer(R__b);
      R__b << NBcTreeCand;
      R__b << NJpsiCand;
      R__b << MaxPt;
      R__b << JPsiPxOld;
      R__b << JPsiPyOld;
      R__b << JPsiPzOld;
      R__b << NumJPsi;
      R__b << fMaxPtCand;
      R__b << fIsValid;
      R__b << jIsValid;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void BcTree::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class BcTree.
      TClass *R__cl = ::BcTree::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fBcTreeArrayCand", &fBcTreeArrayCand);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fBcTreeJpsiArrayCand", &fBcTreeJpsiArrayCand);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBcTreeHeader", &fBcTreeHeader);
      R__insp.InspectMember(fBcTreeHeader, "fBcTreeHeader.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBcTreeGENCand", &fBcTreeGENCand);
      R__insp.InspectMember(fBcTreeGENCand, "fBcTreeGENCand.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NBcTreeCand", &NBcTreeCand);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NJpsiCand", &NJpsiCand);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MaxPt", &MaxPt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "JPsiPxOld", &JPsiPxOld);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "JPsiPyOld", &JPsiPyOld);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "JPsiPzOld", &JPsiPzOld);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NumJPsi", &NumJPsi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMaxPtCand", &fMaxPtCand);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsValid", &fIsValid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "jIsValid", &jIsValid);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_BcTree(void *p) {
      return  p ? new(p) ::BcTree : new ::BcTree;
   }
   static void *newArray_BcTree(Long_t nElements, void *p) {
      return p ? new(p) ::BcTree[nElements] : new ::BcTree[nElements];
   }
   // Wrapper around operator delete
   static void delete_BcTree(void *p) {
      delete ((::BcTree*)p);
   }
   static void deleteArray_BcTree(void *p) {
      delete [] ((::BcTree*)p);
   }
   static void destruct_BcTree(void *p) {
      typedef ::BcTree current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::BcTree

/********************************************************
* BcTreeDictionary.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableBcTreeDictionary();

extern "C" void G__set_cpp_environmentBcTreeDictionary() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("../interface/BcTree.h");
  G__cpp_reset_tagtableBcTreeDictionary();
}
#include <new>
extern "C" int G__cpp_dllrevBcTreeDictionary() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* BcTreeCand */
static int G__BcTreeDictionary_526_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BcTreeCand* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BcTreeCand[n];
     } else {
       p = new((void*) gvp) BcTreeCand[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BcTreeCand;
     } else {
       p = new((void*) gvp) BcTreeCand;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BcTreeDictionaryLN_BcTreeCand));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_526_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BcTreeCand* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new BcTreeCand(*(BcTreeCand*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) BcTreeCand(*(BcTreeCand*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BcTreeDictionaryLN_BcTreeCand));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_526_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BcTreeCand* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 29
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new BcTreeCand(
*(TLorentzVector*) libp->para[0].ref, *(TLorentzVector*) libp->para[1].ref
, *(TLorentzVector*) libp->para[2].ref, *(TLorentzVector*) libp->para[3].ref
, *(TLorentzVector*) libp->para[4].ref, *(TLorentzVector*) libp->para[5].ref
, *(TLorentzVector*) libp->para[6].ref, (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t) G__double(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t*) G__int(libp->para[11])
, (Double_t*) G__int(libp->para[12]), (Double_t*) G__int(libp->para[13])
, (Double_t*) G__int(libp->para[14]), (Double_t) G__double(libp->para[15])
, (Double_t) G__double(libp->para[16]), (Double_t) G__double(libp->para[17])
, (Double_t) G__double(libp->para[18]), (Double_t*) G__int(libp->para[19])
, (Double_t) G__double(libp->para[20]), (Int_t) G__int(libp->para[21])
, (Int_t*) G__int(libp->para[22]), (Double_t) G__double(libp->para[23])
, (Double_t) G__double(libp->para[24]), (Int_t) G__int(libp->para[25])
, (Int_t) G__int(libp->para[26]), (Float_t) G__double(libp->para[27])
, (Double_t*) G__int(libp->para[28]));
   } else {
     p = new((void*) gvp) BcTreeCand(
*(TLorentzVector*) libp->para[0].ref, *(TLorentzVector*) libp->para[1].ref
, *(TLorentzVector*) libp->para[2].ref, *(TLorentzVector*) libp->para[3].ref
, *(TLorentzVector*) libp->para[4].ref, *(TLorentzVector*) libp->para[5].ref
, *(TLorentzVector*) libp->para[6].ref, (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t) G__double(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t*) G__int(libp->para[11])
, (Double_t*) G__int(libp->para[12]), (Double_t*) G__int(libp->para[13])
, (Double_t*) G__int(libp->para[14]), (Double_t) G__double(libp->para[15])
, (Double_t) G__double(libp->para[16]), (Double_t) G__double(libp->para[17])
, (Double_t) G__double(libp->para[18]), (Double_t*) G__int(libp->para[19])
, (Double_t) G__double(libp->para[20]), (Int_t) G__int(libp->para[21])
, (Int_t*) G__int(libp->para[22]), (Double_t) G__double(libp->para[23])
, (Double_t) G__double(libp->para[24]), (Int_t) G__int(libp->para[25])
, (Int_t) G__int(libp->para[26]), (Float_t) G__double(libp->para[27])
, (Double_t*) G__int(libp->para[28]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BcTreeDictionaryLN_BcTreeCand));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_526_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((BcTreeCand*) G__getstructoffset())->GetBcPi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_526_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((BcTreeCand*) G__getstructoffset())->GetBcK());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_526_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((BcTreeCand*) G__getstructoffset())->GetMu1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_526_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((BcTreeCand*) G__getstructoffset())->GetMu2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_526_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((BcTreeCand*) G__getstructoffset())->GetJpsi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_526_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((BcTreeCand*) G__getstructoffset())->GetPi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_526_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((BcTreeCand*) G__getstructoffset())->GetJpsiV());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_526_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((BcTreeCand*) G__getstructoffset())->GetClS());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_526_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((BcTreeCand*) G__getstructoffset())->GetEls());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_526_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((BcTreeCand*) G__getstructoffset())->GetCos());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_526_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((BcTreeCand*) G__getstructoffset())->GetClJpsi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_526_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((BcTreeCand*) G__getstructoffset())->GetBS((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_526_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((BcTreeCand*) G__getstructoffset())->GetVtxS((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_526_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((BcTreeCand*) G__getstructoffset())->GetBSCovariance((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_526_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((BcTreeCand*) G__getstructoffset())->GetSVCovariance((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_526_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((BcTreeCand*) G__getstructoffset())->GetIP3D());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_526_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((BcTreeCand*) G__getstructoffset())->GetIPbs());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_526_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((BcTreeCand*) G__getstructoffset())->GetsIP3D());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_526_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((BcTreeCand*) G__getstructoffset())->GetsIPbs());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_526_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((BcTreeCand*) G__getstructoffset())->GetMatchMu((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_526_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((BcTreeCand*) G__getstructoffset())->GetMatchPi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_526_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((BcTreeCand*) G__getstructoffset())->GetPiCh());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_526_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((BcTreeCand*) G__getstructoffset())->GetMuCh((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_526_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((BcTreeCand*) G__getstructoffset())->GetElsigJpsi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_526_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((BcTreeCand*) G__getstructoffset())->GetCosJpsi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_526_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((BcTreeCand*) G__getstructoffset())->GetTrkNHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_526_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((BcTreeCand*) G__getstructoffset())->GetTrkPixelHIts());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_526_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((BcTreeCand*) G__getstructoffset())->GetTrkChi2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_526_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((BcTreeCand*) G__getstructoffset())->GetHltMatch((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_526_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) BcTreeCand::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_526_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BcTreeCand::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_526_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) BcTreeCand::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_526_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      BcTreeCand::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_526_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BcTreeCand*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_526_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BcTreeCand::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_526_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) BcTreeCand::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_526_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BcTreeCand::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_526_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) BcTreeCand::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef BcTreeCand G__TBcTreeCand;
static int G__BcTreeDictionary_526_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (BcTreeCand*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((BcTreeCand*) (soff+(sizeof(BcTreeCand)*i)))->~G__TBcTreeCand();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (BcTreeCand*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((BcTreeCand*) (soff))->~G__TBcTreeCand();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BcTreeDictionary_526_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BcTreeCand* dest = (BcTreeCand*) G__getstructoffset();
   *dest = *(BcTreeCand*) libp->para[0].ref;
   const BcTreeCand& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* BcTreeGENCand */
static int G__BcTreeDictionary_527_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BcTreeGENCand* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BcTreeGENCand[n];
     } else {
       p = new((void*) gvp) BcTreeGENCand[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BcTreeGENCand;
     } else {
       p = new((void*) gvp) BcTreeGENCand;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BcTreeDictionaryLN_BcTreeGENCand));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_527_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BcTreeGENCand*) G__getstructoffset())->SetBcPi(*((TLorentzVector*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_527_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BcTreeGENCand*) G__getstructoffset())->SetMu1(*((TLorentzVector*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_527_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BcTreeGENCand*) G__getstructoffset())->SetMu2(*((TLorentzVector*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_527_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BcTreeGENCand*) G__getstructoffset())->SetJPsi(*((TLorentzVector*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_527_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BcTreeGENCand*) G__getstructoffset())->SetPi(*((TLorentzVector*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_527_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BcTreeGENCand*) G__getstructoffset())->SetEl((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_527_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BcTreeGENCand*) G__getstructoffset())->SetCos((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_527_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BcTreeGENCand*) G__getstructoffset())->SetVtxSx((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_527_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BcTreeGENCand*) G__getstructoffset())->SetVtxSy((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_527_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BcTreeGENCand*) G__getstructoffset())->SetVtxSz((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_527_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BcTreeGENCand*) G__getstructoffset())->SetBSx((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_527_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BcTreeGENCand*) G__getstructoffset())->SetBSy((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_527_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BcTreeGENCand*) G__getstructoffset())->SetBSz((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_527_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BcTreeGENCand*) G__getstructoffset())->SetPiCh((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_527_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BcTreeGENCand*) G__getstructoffset())->SetMuCh1((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_527_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BcTreeGENCand*) G__getstructoffset())->SetMuCh2((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_527_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TLorentzVector* pobj;
         TLorentzVector xobj = ((BcTreeGENCand*) G__getstructoffset())->GetBcPi();
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_527_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TLorentzVector* pobj;
         TLorentzVector xobj = ((BcTreeGENCand*) G__getstructoffset())->GetMu1();
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_527_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TLorentzVector* pobj;
         TLorentzVector xobj = ((BcTreeGENCand*) G__getstructoffset())->GetMu2();
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_527_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TLorentzVector* pobj;
         TLorentzVector xobj = ((BcTreeGENCand*) G__getstructoffset())->GetJPsi();
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_527_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TLorentzVector* pobj;
         TLorentzVector xobj = ((BcTreeGENCand*) G__getstructoffset())->GetPi();
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_527_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((BcTreeGENCand*) G__getstructoffset())->GetEl());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_527_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((BcTreeGENCand*) G__getstructoffset())->GetCos());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_527_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((BcTreeGENCand*) G__getstructoffset())->GetVtxS((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_527_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((BcTreeGENCand*) G__getstructoffset())->GetBS((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_527_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((BcTreeGENCand*) G__getstructoffset())->GetPiCh());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_527_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((BcTreeGENCand*) G__getstructoffset())->GetMuCh((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_527_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) BcTreeGENCand::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_527_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BcTreeGENCand::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_527_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) BcTreeGENCand::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_527_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      BcTreeGENCand::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_527_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BcTreeGENCand*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_527_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BcTreeGENCand::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_527_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) BcTreeGENCand::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_527_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BcTreeGENCand::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_527_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) BcTreeGENCand::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BcTreeDictionary_527_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   BcTreeGENCand* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new BcTreeGENCand(*(BcTreeGENCand*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BcTreeDictionaryLN_BcTreeGENCand));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef BcTreeGENCand G__TBcTreeGENCand;
static int G__BcTreeDictionary_527_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (BcTreeGENCand*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((BcTreeGENCand*) (soff+(sizeof(BcTreeGENCand)*i)))->~G__TBcTreeGENCand();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (BcTreeGENCand*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((BcTreeGENCand*) (soff))->~G__TBcTreeGENCand();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BcTreeDictionary_527_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BcTreeGENCand* dest = (BcTreeGENCand*) G__getstructoffset();
   *dest = *(BcTreeGENCand*) libp->para[0].ref;
   const BcTreeGENCand& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* JpsiCand */
static int G__BcTreeDictionary_528_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   JpsiCand* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new JpsiCand[n];
     } else {
       p = new((void*) gvp) JpsiCand[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new JpsiCand;
     } else {
       p = new((void*) gvp) JpsiCand;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BcTreeDictionaryLN_JpsiCand));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_528_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   JpsiCand* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new JpsiCand(*(JpsiCand*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) JpsiCand(*(JpsiCand*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BcTreeDictionaryLN_JpsiCand));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_528_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   JpsiCand* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 9
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new JpsiCand(
*(TLorentzVector*) libp->para[0].ref, *(TLorentzVector*) libp->para[1].ref
, *(TLorentzVector*) libp->para[2].ref, (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t*) G__int(libp->para[6]), (Double_t*) G__int(libp->para[7])
, (Int_t*) G__int(libp->para[8]));
   } else {
     p = new((void*) gvp) JpsiCand(
*(TLorentzVector*) libp->para[0].ref, *(TLorentzVector*) libp->para[1].ref
, *(TLorentzVector*) libp->para[2].ref, (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t*) G__int(libp->para[6]), (Double_t*) G__int(libp->para[7])
, (Int_t*) G__int(libp->para[8]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BcTreeDictionaryLN_JpsiCand));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_528_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((JpsiCand*) G__getstructoffset())->GetMu1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_528_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((JpsiCand*) G__getstructoffset())->GetMu2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_528_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((JpsiCand*) G__getstructoffset())->GetJPsi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_528_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((JpsiCand*) G__getstructoffset())->GetEls());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_528_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((JpsiCand*) G__getstructoffset())->GetCos());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_528_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((JpsiCand*) G__getstructoffset())->GetClS());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_528_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((JpsiCand*) G__getstructoffset())->GetVtx((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_528_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((JpsiCand*) G__getstructoffset())->GetMatchMu((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_528_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((JpsiCand*) G__getstructoffset())->GetMuCh((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_528_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) JpsiCand::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_528_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) JpsiCand::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_528_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) JpsiCand::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_528_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      JpsiCand::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_528_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((JpsiCand*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_528_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) JpsiCand::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_528_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) JpsiCand::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_528_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) JpsiCand::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_528_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) JpsiCand::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef JpsiCand G__TJpsiCand;
static int G__BcTreeDictionary_528_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (JpsiCand*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((JpsiCand*) (soff+(sizeof(JpsiCand)*i)))->~G__TJpsiCand();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (JpsiCand*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((JpsiCand*) (soff))->~G__TJpsiCand();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BcTreeDictionary_528_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   JpsiCand* dest = (JpsiCand*) G__getstructoffset();
   *dest = *(JpsiCand*) libp->para[0].ref;
   const JpsiCand& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* BcTreeHeader */
static int G__BcTreeDictionary_529_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BcTreeHeader* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BcTreeHeader[n];
     } else {
       p = new((void*) gvp) BcTreeHeader[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BcTreeHeader;
     } else {
       p = new((void*) gvp) BcTreeHeader;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BcTreeDictionaryLN_BcTreeHeader));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_529_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BcTreeHeader*) G__getstructoffset())->SetNEve((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_529_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BcTreeHeader*) G__getstructoffset())->SetRun((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_529_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BcTreeHeader*) G__getstructoffset())->SetLBlk((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_529_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BcTreeHeader*) G__getstructoffset())->SetEvent((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_529_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BcTreeHeader*) G__getstructoffset())->SetNumBc((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_529_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BcTreeHeader*) G__getstructoffset())->SetNtrk((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_529_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BcTreeHeader*) G__getstructoffset())->SetNprim((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_529_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BcTreeHeader*) G__getstructoffset())->SetTrueNI((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_529_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BcTreeHeader*) G__getstructoffset())->SetTriggerBit((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_529_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BcTreeHeader*) G__getstructoffset())->SetGoodTrkSize((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_529_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((BcTreeHeader*) G__getstructoffset())->GetNEve());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_529_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((BcTreeHeader*) G__getstructoffset())->GetRun());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_529_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((BcTreeHeader*) G__getstructoffset())->GetLBlk());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_529_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((BcTreeHeader*) G__getstructoffset())->GetEvent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_529_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((BcTreeHeader*) G__getstructoffset())->GetNumBc());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_529_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((BcTreeHeader*) G__getstructoffset())->GetNtrk());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_529_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((BcTreeHeader*) G__getstructoffset())->GetNprim());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_529_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((BcTreeHeader*) G__getstructoffset())->GetTrueNI());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_529_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((BcTreeHeader*) G__getstructoffset())->GetTriggerBit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_529_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((BcTreeHeader*) G__getstructoffset())->GetGoodTrkSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_529_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) BcTreeHeader::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_529_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BcTreeHeader::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_529_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) BcTreeHeader::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_529_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      BcTreeHeader::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_529_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const BcTreeHeader*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_529_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BcTreeHeader*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_529_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BcTreeHeader*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_529_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BcTreeHeader*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_529_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BcTreeHeader::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_529_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) BcTreeHeader::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_529_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BcTreeHeader::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_529_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) BcTreeHeader::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BcTreeDictionary_529_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   BcTreeHeader* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new BcTreeHeader(*(BcTreeHeader*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BcTreeDictionaryLN_BcTreeHeader));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef BcTreeHeader G__TBcTreeHeader;
static int G__BcTreeDictionary_529_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (BcTreeHeader*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((BcTreeHeader*) (soff+(sizeof(BcTreeHeader)*i)))->~G__TBcTreeHeader();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (BcTreeHeader*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((BcTreeHeader*) (soff))->~G__TBcTreeHeader();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BcTreeDictionary_529_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BcTreeHeader* dest = (BcTreeHeader*) G__getstructoffset();
   *dest = *(BcTreeHeader*) libp->para[0].ref;
   const BcTreeHeader& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* BcTree */
static int G__BcTreeDictionary_530_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BcTree* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BcTree[n];
     } else {
       p = new((void*) gvp) BcTree[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BcTree;
     } else {
       p = new((void*) gvp) BcTree;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BcTreeDictionaryLN_BcTree));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_530_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((BcTree*) G__getstructoffset())->BcTreeClear((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((BcTree*) G__getstructoffset())->BcTreeClear();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_530_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const BcTree*) G__getstructoffset())->GetBcTreeArrayCand());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_530_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const BcTree*) G__getstructoffset())->GetBcTreeJpsiArrayCand());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_530_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const BcTree*) G__getstructoffset())->GetMaxPtCand());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_530_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const BcTree*) G__getstructoffset())->GetNBcTreeCand());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_530_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const BcTree*) G__getstructoffset())->GetNJpsiCand());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_530_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const BcTree*) G__getstructoffset())->GetNumJPsi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_530_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((BcTree*) G__getstructoffset())->GetBcTreeHeader());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_530_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((BcTree*) G__getstructoffset())->GetBcTreeGENCand());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_530_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((BcTree*) G__getstructoffset())->AddBcTreeCand(
*(TLorentzVector*) libp->para[0].ref, *(TLorentzVector*) libp->para[1].ref
, *(TLorentzVector*) libp->para[2].ref, *(TLorentzVector*) libp->para[3].ref
, *(TLorentzVector*) libp->para[4].ref, *(TLorentzVector*) libp->para[5].ref
, *(TLorentzVector*) libp->para[6].ref, (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]), (Double_t) G__double(libp->para[9])
, (Double_t) G__double(libp->para[10]), (Double_t*) G__int(libp->para[11])
, (Double_t*) G__int(libp->para[12]), (Double_t*) G__int(libp->para[13])
, (Double_t*) G__int(libp->para[14]), (Double_t) G__double(libp->para[15])
, (Double_t) G__double(libp->para[16]), (Double_t) G__double(libp->para[17])
, (Double_t) G__double(libp->para[18]), (Double_t*) G__int(libp->para[19])
, (Double_t) G__double(libp->para[20]), (Int_t) G__int(libp->para[21])
, (Int_t*) G__int(libp->para[22]), (Double_t) G__double(libp->para[23])
, (Double_t) G__double(libp->para[24]), (Int_t) G__int(libp->para[25])
, (Int_t) G__int(libp->para[26]), (Float_t) G__double(libp->para[27])
, (Double_t*) G__int(libp->para[28])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_530_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BcTree*) G__getstructoffset())->SetBcTreeGENCand(
*((TLorentzVector*) G__int(libp->para[0])), *((TLorentzVector*) G__int(libp->para[1]))
, *((TLorentzVector*) G__int(libp->para[2])), *((TLorentzVector*) G__int(libp->para[3]))
, *((TLorentzVector*) G__int(libp->para[4])), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t*) G__int(libp->para[7])
, (Double_t*) G__int(libp->para[8]), (Int_t) G__int(libp->para[9])
, (Int_t*) G__int(libp->para[10]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_530_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BcTree*) G__getstructoffset())->SetBcTreeHeader(
(UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3])
, (UInt_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Float_t) G__double(libp->para[7])
, (Int_t) G__int(libp->para[8]), (Int_t) G__int(libp->para[9]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_530_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((BcTree*) G__getstructoffset())->AddJpsiCand(
*(TLorentzVector*) libp->para[0].ref, *(TLorentzVector*) libp->para[1].ref
, *(TLorentzVector*) libp->para[2].ref, (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t*) G__int(libp->para[6]), (Double_t*) G__int(libp->para[7])
, (Int_t*) G__int(libp->para[8])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_530_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) BcTree::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_530_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BcTree::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_530_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) BcTree::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_530_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      BcTree::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_530_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BcTree*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_530_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BcTree::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_530_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) BcTree::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_530_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BcTree::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BcTreeDictionary_530_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) BcTree::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BcTreeDictionary_530_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   BcTree* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new BcTree(*(BcTree*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BcTreeDictionaryLN_BcTree));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef BcTree G__TBcTree;
static int G__BcTreeDictionary_530_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (BcTree*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((BcTree*) (soff+(sizeof(BcTree)*i)))->~G__TBcTree();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (BcTree*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((BcTree*) (soff))->~G__TBcTree();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BcTreeDictionary_530_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BcTree* dest = (BcTree*) G__getstructoffset();
   *dest = *(BcTree*) libp->para[0].ref;
   const BcTree& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* BcTreeCand */

/* BcTreeGENCand */

/* JpsiCand */

/* BcTreeHeader */

/* BcTree */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncBcTreeDictionary {
 public:
  G__Sizep2memfuncBcTreeDictionary(): p(&G__Sizep2memfuncBcTreeDictionary::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncBcTreeDictionary::*p)();
};

size_t G__get_sizep2memfuncBcTreeDictionary()
{
  G__Sizep2memfuncBcTreeDictionary a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceBcTreeDictionary() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BcTreeDictionaryLN_BcTreeCand))) {
     BcTreeCand *G__Lderived;
     G__Lderived=(BcTreeCand*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BcTreeDictionaryLN_BcTreeCand),G__get_linked_tagnum(&G__BcTreeDictionaryLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BcTreeDictionaryLN_BcTreeGENCand))) {
     BcTreeGENCand *G__Lderived;
     G__Lderived=(BcTreeGENCand*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BcTreeDictionaryLN_BcTreeGENCand),G__get_linked_tagnum(&G__BcTreeDictionaryLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BcTreeDictionaryLN_JpsiCand))) {
     JpsiCand *G__Lderived;
     G__Lderived=(JpsiCand*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BcTreeDictionaryLN_JpsiCand),G__get_linked_tagnum(&G__BcTreeDictionaryLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BcTreeDictionaryLN_BcTree))) {
     BcTree *G__Lderived;
     G__Lderived=(BcTree*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BcTreeDictionaryLN_BcTree),G__get_linked_tagnum(&G__BcTreeDictionaryLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableBcTreeDictionary() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Option_t",99,-1,256,-1);
   G__setnewtype(-1,"Option string (const char)",0);
   G__search_typename2("vector<TSchemaHelper>",117,G__get_linked_tagnum(&G__BcTreeDictionaryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__BcTreeDictionaryLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BcTreeDictionaryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__BcTreeDictionaryLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BcTreeDictionaryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__BcTreeDictionaryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__BcTreeDictionaryLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__BcTreeDictionaryLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__BcTreeDictionaryLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__BcTreeDictionaryLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__BcTreeDictionaryLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__BcTreeDictionaryLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__BcTreeDictionaryLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__BcTreeDictionaryLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__BcTreeDictionaryLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__BcTreeDictionaryLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__BcTreeDictionaryLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__BcTreeDictionaryLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__BcTreeDictionaryLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__BcTreeDictionaryLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__BcTreeDictionaryLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__BcTreeDictionaryLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__BcTreeDictionaryLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__BcTreeDictionaryLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__BcTreeDictionaryLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__BcTreeDictionaryLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__BcTreeDictionaryLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__BcTreeDictionaryLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__BcTreeDictionaryLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__BcTreeDictionaryLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__BcTreeDictionaryLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__BcTreeDictionaryLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__BcTreeDictionaryLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__BcTreeDictionaryLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* BcTreeCand */
static void G__setup_memvarBcTreeCand(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BcTreeDictionaryLN_BcTreeCand));
   { BcTreeCand *p; p=(BcTreeCand*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BcTreeDictionaryLN_TLorentzVector),-1,-1,4,"BcPi_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BcTreeDictionaryLN_TLorentzVector),-1,-1,4,"BcK_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BcTreeDictionaryLN_TLorentzVector),-1,-1,4,"Mu1_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BcTreeDictionaryLN_TLorentzVector),-1,-1,4,"Mu2_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BcTreeDictionaryLN_TLorentzVector),-1,-1,4,"Jpsi_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BcTreeDictionaryLN_TLorentzVector),-1,-1,4,"Pi_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BcTreeDictionaryLN_TLorentzVector),-1,-1,4,"JpsiV_=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"Els_=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"Cos_=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"ClS_=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"ClJpsi_=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"BS_[3]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"VtxS_[3]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"BSCovariance_[9]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"SVCovariance_[9]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"IP3D_=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"IPbs_=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"sIP3D_=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"sIPbs_=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"MatchMu_[2]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"MatchPi_=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"PiCh_=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"MuCh_[2]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"ElsigJpsi_=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"CosJpsi_=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"TrkNHits_=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"TrkPixelHits_=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"TrkChi2_=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"HltMatch_[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BcTreeDictionaryLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* BcTreeGENCand */
static void G__setup_memvarBcTreeGENCand(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BcTreeDictionaryLN_BcTreeGENCand));
   { BcTreeGENCand *p; p=(BcTreeGENCand*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BcTreeDictionaryLN_TLorentzVector),-1,-1,4,"BcPi_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BcTreeDictionaryLN_TLorentzVector),-1,-1,4,"Mu1_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BcTreeDictionaryLN_TLorentzVector),-1,-1,4,"Mu2_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BcTreeDictionaryLN_TLorentzVector),-1,-1,4,"JPsi_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BcTreeDictionaryLN_TLorentzVector),-1,-1,4,"Pi_=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"El_=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"Cos_=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"VtxS_[3]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"BS_[3]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"PiCh_=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"MuCh_[2]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BcTreeDictionaryLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* JpsiCand */
static void G__setup_memvarJpsiCand(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BcTreeDictionaryLN_JpsiCand));
   { JpsiCand *p; p=(JpsiCand*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BcTreeDictionaryLN_TLorentzVector),-1,-1,4,"Mu1_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BcTreeDictionaryLN_TLorentzVector),-1,-1,4,"Mu2_=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BcTreeDictionaryLN_TLorentzVector),-1,-1,4,"Jpsi_=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"Els_=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"Cos_=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"ClS_=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"VtxJ_[3]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"MatchMu_[2]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"MuCh_[2]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BcTreeDictionaryLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* BcTreeHeader */
static void G__setup_memvarBcTreeHeader(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BcTreeDictionaryLN_BcTreeHeader));
   { BcTreeHeader *p; p=(BcTreeHeader*)0x1000; if (p) { }
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"NEve_=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"Run_=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"LBlk_=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"Event_=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"NumBc_=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Ntrk_=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Nprim_=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"TrueNI_=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"TriggerBit_=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"GoodTrkSize_=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BcTreeDictionaryLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* BcTree */
static void G__setup_memvarBcTree(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BcTreeDictionaryLN_BcTree));
   { BcTree *p; p=(BcTree*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BcTreeDictionaryLN_TClonesArray),-1,-1,4,"fBcTreeArrayCand=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BcTreeDictionaryLN_TClonesArray),-1,-2,4,"fgBcTreeArrayCand=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BcTreeDictionaryLN_TClonesArray),-1,-1,4,"fBcTreeJpsiArrayCand=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BcTreeDictionaryLN_TClonesArray),-1,-2,4,"fgBcTreeJpsiArrayCand=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BcTreeDictionaryLN_BcTreeHeader),-1,-1,4,"fBcTreeHeader=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BcTreeDictionaryLN_BcTreeGENCand),-1,-1,4,"fBcTreeGENCand=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"NBcTreeCand=",0,"Number of Bc Candidates");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"NJpsiCand=",0,"Number of Jpsi Candidates");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"MaxPt=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"JPsiPxOld=",0,"Count JPsi ");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"JPsiPyOld=",0,"...");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"JPsiPzOld=",0,"...");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"NumJPsi=",0,"Count JPsi");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BcTreeDictionaryLN_TRefArray),-1,-1,4,"fMaxPtCand=",0,"array of High Pt Cand Only");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fIsValid=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"jIsValid=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BcTreeDictionaryLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarBcTreeDictionary() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncBcTreeCand(void) {
   /* BcTreeCand */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BcTreeDictionaryLN_BcTreeCand));
   G__memfunc_setup("BcTreeCand",939,G__BcTreeDictionary_526_0_1, 105, G__get_linked_tagnum(&G__BcTreeDictionaryLN_BcTreeCand), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BcTreeCand",939,G__BcTreeDictionary_526_0_2, 105, G__get_linked_tagnum(&G__BcTreeDictionaryLN_BcTreeCand), -1, 0, 1, 1, 1, 0, "u 'BcTreeCand' - 11 - orig", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BcTreeCand",939,G__BcTreeDictionary_526_0_3, 105, G__get_linked_tagnum(&G__BcTreeDictionaryLN_BcTreeCand), -1, 0, 29, 1, 1, 0, 
"u 'TLorentzVector' - 11 - BcPi u 'TLorentzVector' - 11 - BcK "
"u 'TLorentzVector' - 11 - Mu1 u 'TLorentzVector' - 11 - Mu2 "
"u 'TLorentzVector' - 11 - Jpsi u 'TLorentzVector' - 11 - Pi "
"u 'TLorentzVector' - 11 - JpsiV d - 'Double_t' 0 - Els "
"d - 'Double_t' 0 - Cos d - 'Double_t' 0 - ClS "
"d - 'Double_t' 0 - ClJpsi D - 'Double_t' 0 - BS "
"D - 'Double_t' 0 - VtxS D - 'Double_t' 0 - BSCovariance "
"D - 'Double_t' 0 - SVCovariance d - 'Double_t' 0 - IP3D "
"d - 'Double_t' 0 - IPbs d - 'Double_t' 0 - sIP3D "
"d - 'Double_t' 0 - sIPbs D - 'Double_t' 0 - MatchMu "
"d - 'Double_t' 0 - MatchPi i - 'Int_t' 0 - PiCh "
"I - 'Int_t' 0 - MuCh d - 'Double_t' 0 - ElsigJpsi "
"d - 'Double_t' 0 - CosJpsi i - 'Int_t' 0 - TrkNHits "
"i - 'Int_t' 0 - TrkPixelHits f - 'Float_t' 0 - TrkChi2 "
"D - 'Double_t' 0 - HltMatch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBcPi",638,G__BcTreeDictionary_526_0_4, 85, G__get_linked_tagnum(&G__BcTreeDictionaryLN_TLorentzVector), -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBcK",528,G__BcTreeDictionary_526_0_5, 85, G__get_linked_tagnum(&G__BcTreeDictionaryLN_TLorentzVector), -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMu1",531,G__BcTreeDictionary_526_0_6, 85, G__get_linked_tagnum(&G__BcTreeDictionaryLN_TLorentzVector), -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMu2",532,G__BcTreeDictionary_526_0_7, 85, G__get_linked_tagnum(&G__BcTreeDictionaryLN_TLorentzVector), -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJpsi",694,G__BcTreeDictionary_526_0_8, 85, G__get_linked_tagnum(&G__BcTreeDictionaryLN_TLorentzVector), -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPi",473,G__BcTreeDictionary_526_0_9, 85, G__get_linked_tagnum(&G__BcTreeDictionaryLN_TLorentzVector), -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJpsiV",780,G__BcTreeDictionary_526_0_10, 85, G__get_linked_tagnum(&G__BcTreeDictionaryLN_TLorentzVector), -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetClS",546,G__BcTreeDictionary_526_0_11, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEls",580,G__BcTreeDictionary_526_0_12, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCos",581,G__BcTreeDictionary_526_0_13, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetClJpsi",869,G__BcTreeDictionary_526_0_14, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBS",437,G__BcTreeDictionary_526_0_15, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - Id_", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVtxS",693,G__BcTreeDictionary_526_0_16, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - Id_", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBSCovariance",1456,G__BcTreeDictionary_526_0_17, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - Id_", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSVCovariance",1476,G__BcTreeDictionary_526_0_18, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - Id_", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIP3D",560,G__BcTreeDictionary_526_0_19, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIPbs",654,G__BcTreeDictionary_526_0_20, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetsIP3D",675,G__BcTreeDictionary_526_0_21, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetsIPbs",769,G__BcTreeDictionary_526_0_22, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMatchMu",975,G__BcTreeDictionary_526_0_23, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - Id_", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMatchPi",966,G__BcTreeDictionary_526_0_24, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPiCh",644,G__BcTreeDictionary_526_0_25, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMuCh",653,G__BcTreeDictionary_526_0_26, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - Id_", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetElsigJpsi",1194,G__BcTreeDictionary_526_0_27, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCosJpsi",987,G__BcTreeDictionary_526_0_28, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrkNHits",1079,G__BcTreeDictionary_526_0_29, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrkPixelHIts",1483,G__BcTreeDictionary_526_0_30, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrkChi2",919,G__BcTreeDictionary_526_0_31, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHltMatch",1077,G__BcTreeDictionary_526_0_32, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - Id_", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BcTreeDictionary_526_0_33, 85, G__get_linked_tagnum(&G__BcTreeDictionaryLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&BcTreeCand::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BcTreeDictionary_526_0_34, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BcTreeCand::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BcTreeDictionary_526_0_35, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&BcTreeCand::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BcTreeDictionary_526_0_36, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&BcTreeCand::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BcTreeDictionaryLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BcTreeDictionary_526_0_40, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BcTreeDictionary_526_0_41, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BcTreeCand::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BcTreeDictionary_526_0_42, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&BcTreeCand::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BcTreeDictionary_526_0_43, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BcTreeCand::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BcTreeDictionary_526_0_44, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&BcTreeCand::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~BcTreeCand", 1065, G__BcTreeDictionary_526_0_45, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BcTreeDictionary_526_0_46, (int) ('u'), G__get_linked_tagnum(&G__BcTreeDictionaryLN_BcTreeCand), -1, 1, 1, 1, 1, 0, "u 'BcTreeCand' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncBcTreeGENCand(void) {
   /* BcTreeGENCand */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BcTreeDictionaryLN_BcTreeGENCand));
   G__memfunc_setup("BcTreeGENCand",1157,G__BcTreeDictionary_527_0_1, 105, G__get_linked_tagnum(&G__BcTreeDictionaryLN_BcTreeGENCand), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBcPi",650,G__BcTreeDictionary_527_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TLorentzVector' - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMu1",543,G__BcTreeDictionary_527_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TLorentzVector' - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMu2",544,G__BcTreeDictionary_527_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TLorentzVector' - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetJPsi",674,G__BcTreeDictionary_527_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TLorentzVector' - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPi",485,G__BcTreeDictionary_527_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TLorentzVector' - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEl",477,G__BcTreeDictionary_527_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCos",593,G__BcTreeDictionary_527_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetVtxSx",825,G__BcTreeDictionary_527_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetVtxSy",826,G__BcTreeDictionary_527_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetVtxSz",827,G__BcTreeDictionary_527_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBSx",569,G__BcTreeDictionary_527_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBSy",570,G__BcTreeDictionary_527_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBSz",571,G__BcTreeDictionary_527_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPiCh",656,G__BcTreeDictionary_527_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMuCh1",714,G__BcTreeDictionary_527_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMuCh2",715,G__BcTreeDictionary_527_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBcPi",638,G__BcTreeDictionary_527_0_18, 117, G__get_linked_tagnum(&G__BcTreeDictionaryLN_TLorentzVector), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMu1",531,G__BcTreeDictionary_527_0_19, 117, G__get_linked_tagnum(&G__BcTreeDictionaryLN_TLorentzVector), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMu2",532,G__BcTreeDictionary_527_0_20, 117, G__get_linked_tagnum(&G__BcTreeDictionaryLN_TLorentzVector), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJPsi",662,G__BcTreeDictionary_527_0_21, 117, G__get_linked_tagnum(&G__BcTreeDictionaryLN_TLorentzVector), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPi",473,G__BcTreeDictionary_527_0_22, 117, G__get_linked_tagnum(&G__BcTreeDictionaryLN_TLorentzVector), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEl",465,G__BcTreeDictionary_527_0_23, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCos",581,G__BcTreeDictionary_527_0_24, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVtxS",693,G__BcTreeDictionary_527_0_25, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - Id_", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBS",437,G__BcTreeDictionary_527_0_26, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - Id_", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPiCh",644,G__BcTreeDictionary_527_0_27, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMuCh",653,G__BcTreeDictionary_527_0_28, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - Id_", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BcTreeDictionary_527_0_29, 85, G__get_linked_tagnum(&G__BcTreeDictionaryLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&BcTreeGENCand::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BcTreeDictionary_527_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BcTreeGENCand::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BcTreeDictionary_527_0_31, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&BcTreeGENCand::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BcTreeDictionary_527_0_32, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&BcTreeGENCand::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BcTreeDictionaryLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BcTreeDictionary_527_0_36, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BcTreeDictionary_527_0_37, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BcTreeGENCand::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BcTreeDictionary_527_0_38, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&BcTreeGENCand::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BcTreeDictionary_527_0_39, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BcTreeGENCand::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BcTreeDictionary_527_0_40, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&BcTreeGENCand::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("BcTreeGENCand", 1157, G__BcTreeDictionary_527_0_41, (int) ('i'), G__get_linked_tagnum(&G__BcTreeDictionaryLN_BcTreeGENCand), -1, 0, 1, 1, 1, 0, "u 'BcTreeGENCand' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~BcTreeGENCand", 1283, G__BcTreeDictionary_527_0_42, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BcTreeDictionary_527_0_43, (int) ('u'), G__get_linked_tagnum(&G__BcTreeDictionaryLN_BcTreeGENCand), -1, 1, 1, 1, 1, 0, "u 'BcTreeGENCand' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncJpsiCand(void) {
   /* JpsiCand */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BcTreeDictionaryLN_JpsiCand));
   G__memfunc_setup("JpsiCand",780,G__BcTreeDictionary_528_0_1, 105, G__get_linked_tagnum(&G__BcTreeDictionaryLN_JpsiCand), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("JpsiCand",780,G__BcTreeDictionary_528_0_2, 105, G__get_linked_tagnum(&G__BcTreeDictionaryLN_JpsiCand), -1, 0, 1, 1, 1, 0, "u 'JpsiCand' - 11 - orig", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("JpsiCand",780,G__BcTreeDictionary_528_0_3, 105, G__get_linked_tagnum(&G__BcTreeDictionaryLN_JpsiCand), -1, 0, 9, 1, 1, 0, 
"u 'TLorentzVector' - 11 - Mu1 u 'TLorentzVector' - 11 - Mu2 "
"u 'TLorentzVector' - 11 - Jpsi d - 'Double_t' 0 - Els "
"d - 'Double_t' 0 - Cos d - 'Double_t' 0 - ClS "
"D - 'Double_t' 0 - VtxJ D - 'Double_t' 0 - MatchMu "
"I - 'Int_t' 0 - MuCh", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMu1",531,G__BcTreeDictionary_528_0_4, 85, G__get_linked_tagnum(&G__BcTreeDictionaryLN_TLorentzVector), -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMu2",532,G__BcTreeDictionary_528_0_5, 85, G__get_linked_tagnum(&G__BcTreeDictionaryLN_TLorentzVector), -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJPsi",662,G__BcTreeDictionary_528_0_6, 85, G__get_linked_tagnum(&G__BcTreeDictionaryLN_TLorentzVector), -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEls",580,G__BcTreeDictionary_528_0_7, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCos",581,G__BcTreeDictionary_528_0_8, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetClS",546,G__BcTreeDictionary_528_0_9, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVtx",610,G__BcTreeDictionary_528_0_10, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - Id_", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMatchMu",975,G__BcTreeDictionary_528_0_11, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - Id_", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMuCh",653,G__BcTreeDictionary_528_0_12, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - Id_", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BcTreeDictionary_528_0_13, 85, G__get_linked_tagnum(&G__BcTreeDictionaryLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&JpsiCand::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BcTreeDictionary_528_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&JpsiCand::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BcTreeDictionary_528_0_15, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&JpsiCand::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BcTreeDictionary_528_0_16, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&JpsiCand::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BcTreeDictionaryLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BcTreeDictionary_528_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BcTreeDictionary_528_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&JpsiCand::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BcTreeDictionary_528_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&JpsiCand::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BcTreeDictionary_528_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&JpsiCand::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BcTreeDictionary_528_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&JpsiCand::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~JpsiCand", 906, G__BcTreeDictionary_528_0_25, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BcTreeDictionary_528_0_26, (int) ('u'), G__get_linked_tagnum(&G__BcTreeDictionaryLN_JpsiCand), -1, 1, 1, 1, 1, 0, "u 'JpsiCand' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncBcTreeHeader(void) {
   /* BcTreeHeader */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BcTreeDictionaryLN_BcTreeHeader));
   G__memfunc_setup("BcTreeHeader",1150,G__BcTreeDictionary_529_0_1, 105, G__get_linked_tagnum(&G__BcTreeDictionaryLN_BcTreeHeader), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNEve",666,G__BcTreeDictionary_529_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRun",609,G__BcTreeDictionary_529_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLBlk",657,G__BcTreeDictionary_529_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEvent",814,G__BcTreeDictionary_529_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNumBc",769,G__BcTreeDictionary_529_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNtrk",715,G__BcTreeDictionary_529_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNprim",818,G__BcTreeDictionary_529_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTrueNI",867,G__BcTreeDictionary_529_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTriggerBit",1311,G__BcTreeDictionary_529_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetGoodTrkSize",1409,G__BcTreeDictionary_529_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNEve",654,G__BcTreeDictionary_529_0_12, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRun",597,G__BcTreeDictionary_529_0_13, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLBlk",645,G__BcTreeDictionary_529_0_14, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEvent",802,G__BcTreeDictionary_529_0_15, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumBc",757,G__BcTreeDictionary_529_0_16, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNtrk",703,G__BcTreeDictionary_529_0_17, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNprim",806,G__BcTreeDictionary_529_0_18, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrueNI",855,G__BcTreeDictionary_529_0_19, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTriggerBit",1299,G__BcTreeDictionary_529_0_20, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGoodTrkSize",1397,G__BcTreeDictionary_529_0_21, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BcTreeDictionary_529_0_22, 85, G__get_linked_tagnum(&G__BcTreeDictionaryLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&BcTreeHeader::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BcTreeDictionary_529_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BcTreeHeader::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BcTreeDictionary_529_0_24, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&BcTreeHeader::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BcTreeDictionary_529_0_25, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&BcTreeHeader::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__BcTreeDictionary_529_0_26, 85, G__get_linked_tagnum(&G__BcTreeDictionaryLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__BcTreeDictionary_529_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__BcTreeDictionary_529_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BcTreeDictionary_529_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BcTreeDictionary_529_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BcTreeHeader::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BcTreeDictionary_529_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&BcTreeHeader::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BcTreeDictionary_529_0_32, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BcTreeHeader::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BcTreeDictionary_529_0_33, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&BcTreeHeader::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("BcTreeHeader", 1150, G__BcTreeDictionary_529_0_34, (int) ('i'), G__get_linked_tagnum(&G__BcTreeDictionaryLN_BcTreeHeader), -1, 0, 1, 1, 1, 0, "u 'BcTreeHeader' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~BcTreeHeader", 1276, G__BcTreeDictionary_529_0_35, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BcTreeDictionary_529_0_36, (int) ('u'), G__get_linked_tagnum(&G__BcTreeDictionaryLN_BcTreeHeader), -1, 1, 1, 1, 1, 0, "u 'BcTreeHeader' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncBcTree(void) {
   /* BcTree */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BcTreeDictionaryLN_BcTree));
   G__memfunc_setup("ClearBcTreeHeader",1637,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearBcTreeGENCand",1644,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearJpsiCand",1267,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BcTree",565,G__BcTreeDictionary_530_0_4, 105, G__get_linked_tagnum(&G__BcTreeDictionaryLN_BcTree), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BcTreeClear",1052,G__BcTreeDictionary_530_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBcTreeArrayCand",1738,G__BcTreeDictionary_530_0_6, 85, G__get_linked_tagnum(&G__BcTreeDictionaryLN_TClonesArray), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBcTreeJpsiArrayCand",2144,G__BcTreeDictionary_530_0_7, 85, G__get_linked_tagnum(&G__BcTreeDictionaryLN_TClonesArray), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMaxPtCand",1152,G__BcTreeDictionary_530_0_8, 85, G__get_linked_tagnum(&G__BcTreeDictionaryLN_TRefArray), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNBcTreeCand",1305,G__BcTreeDictionary_530_0_9, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNJpsiCand",1146,G__BcTreeDictionary_530_0_10, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumJPsi",966,G__BcTreeDictionary_530_0_11, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBcTreeHeader",1438,G__BcTreeDictionary_530_0_12, 85, G__get_linked_tagnum(&G__BcTreeDictionaryLN_BcTreeHeader), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBcTreeGENCand",1445,G__BcTreeDictionary_530_0_13, 85, G__get_linked_tagnum(&G__BcTreeDictionaryLN_BcTreeGENCand), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddBcTreeCand",1204,G__BcTreeDictionary_530_0_14, 85, G__get_linked_tagnum(&G__BcTreeDictionaryLN_BcTreeCand), -1, 0, 29, 1, 1, 0, 
"u 'TLorentzVector' - 11 - BcPi u 'TLorentzVector' - 11 - BcK "
"u 'TLorentzVector' - 11 - Mu1 u 'TLorentzVector' - 11 - Mu2 "
"u 'TLorentzVector' - 11 - Jpsi u 'TLorentzVector' - 11 - Pi "
"u 'TLorentzVector' - 11 - JpsiV d - 'Double_t' 0 - Els "
"d - 'Double_t' 0 - Cos d - 'Double_t' 0 - ClS "
"d - 'Double_t' 0 - ClJpsi D - 'Double_t' 0 - BS "
"D - 'Double_t' 0 - VtxS D - 'Double_t' 0 - BSCovariance "
"D - 'Double_t' 0 - SVCovariance d - 'Double_t' 0 - IP3D "
"d - 'Double_t' 0 - IPbs d - 'Double_t' 0 - sIP3D "
"d - 'Double_t' 0 - sIPbs D - 'Double_t' 0 - MatchMu "
"d - 'Double_t' 0 - MatchPi i - 'Int_t' 0 - PiCh "
"I - 'Int_t' 0 - MuCh d - 'Double_t' 0 - ElsigJpsi "
"d - 'Double_t' 0 - CosJpsi i - 'Int_t' 0 - TrkNHits "
"i - 'Int_t' 0 - TrkPixelHits f - 'Float_t' 0 - TrkChi2 "
"D - 'Double_t' 0 - HltMatch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBcTreeGENCand",1457,G__BcTreeDictionary_530_0_15, 121, -1, -1, 0, 11, 1, 1, 0, 
"u 'TLorentzVector' - 0 - BcPi u 'TLorentzVector' - 0 - Mu1 "
"u 'TLorentzVector' - 0 - Mu2 u 'TLorentzVector' - 0 - JPsi "
"u 'TLorentzVector' - 0 - Pi d - 'Double_t' 0 - El "
"d - 'Double_t' 0 - Cos D - 'Double_t' 0 - VtxS "
"D - 'Double_t' 0 - BS i - 'Int_t' 0 - PiCh "
"I - 'Int_t' 0 - MuCh", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBcTreeHeader",1450,G__BcTreeDictionary_530_0_16, 121, -1, -1, 0, 10, 1, 1, 0, 
"h - 'UInt_t' 0 - NEve h - 'UInt_t' 0 - Run "
"h - 'UInt_t' 0 - LBlk h - 'UInt_t' 0 - Event "
"h - 'UInt_t' 0 - NumBc i - 'Int_t' 0 - Ntrk "
"i - 'Int_t' 0 - Nprim f - 'Float_t' 0 - TrueNI "
"i - 'Int_t' 0 - TriggerBit i - 'Int_t' 0 - GoodTrkSize", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddJpsiCand",1045,G__BcTreeDictionary_530_0_17, 85, G__get_linked_tagnum(&G__BcTreeDictionaryLN_JpsiCand), -1, 0, 9, 1, 1, 0, 
"u 'TLorentzVector' - 11 - Mu1 u 'TLorentzVector' - 11 - Mu2 "
"u 'TLorentzVector' - 11 - Jpsi d - 'Double_t' 0 - Els "
"d - 'Double_t' 0 - Cos d - 'Double_t' 0 - ClS "
"D - 'Double_t' 0 - VtxJ D - 'Double_t' 0 - MatchMu "
"I - 'Int_t' 0 - MuCh", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BcTreeDictionary_530_0_18, 85, G__get_linked_tagnum(&G__BcTreeDictionaryLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&BcTree::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BcTreeDictionary_530_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BcTree::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BcTreeDictionary_530_0_20, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&BcTree::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BcTreeDictionary_530_0_21, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&BcTree::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BcTreeDictionaryLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BcTreeDictionary_530_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BcTreeDictionary_530_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BcTree::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BcTreeDictionary_530_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&BcTree::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BcTreeDictionary_530_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BcTree::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BcTreeDictionary_530_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&BcTree::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("BcTree", 565, G__BcTreeDictionary_530_0_30, (int) ('i'), G__get_linked_tagnum(&G__BcTreeDictionaryLN_BcTree), -1, 0, 1, 1, 1, 0, "u 'BcTree' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~BcTree", 691, G__BcTreeDictionary_530_0_31, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BcTreeDictionary_530_0_32, (int) ('u'), G__get_linked_tagnum(&G__BcTreeDictionaryLN_BcTree), -1, 1, 1, 1, 1, 0, "u 'BcTree' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncBcTreeDictionary() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalBcTreeDictionary() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcBcTreeDictionary() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__BcTreeDictionaryLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__BcTreeDictionaryLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__BcTreeDictionaryLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__BcTreeDictionaryLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__BcTreeDictionaryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__BcTreeDictionaryLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__BcTreeDictionaryLN_TClonesArray = { "TClonesArray" , 99 , -1 };
G__linked_taginfo G__BcTreeDictionaryLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__BcTreeDictionaryLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__BcTreeDictionaryLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__BcTreeDictionaryLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__BcTreeDictionaryLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__BcTreeDictionaryLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__BcTreeDictionaryLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__BcTreeDictionaryLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__BcTreeDictionaryLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__BcTreeDictionaryLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__BcTreeDictionaryLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__BcTreeDictionaryLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__BcTreeDictionaryLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__BcTreeDictionaryLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__BcTreeDictionaryLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__BcTreeDictionaryLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__BcTreeDictionaryLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__BcTreeDictionaryLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__BcTreeDictionaryLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__BcTreeDictionaryLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__BcTreeDictionaryLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__BcTreeDictionaryLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__BcTreeDictionaryLN_TLorentzVector = { "TLorentzVector" , 99 , -1 };
G__linked_taginfo G__BcTreeDictionaryLN_TRefArray = { "TRefArray" , 99 , -1 };
G__linked_taginfo G__BcTreeDictionaryLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__BcTreeDictionaryLN_BcTreeCand = { "BcTreeCand" , 99 , -1 };
G__linked_taginfo G__BcTreeDictionaryLN_BcTreeGENCand = { "BcTreeGENCand" , 99 , -1 };
G__linked_taginfo G__BcTreeDictionaryLN_JpsiCand = { "JpsiCand" , 99 , -1 };
G__linked_taginfo G__BcTreeDictionaryLN_BcTreeHeader = { "BcTreeHeader" , 99 , -1 };
G__linked_taginfo G__BcTreeDictionaryLN_BcTree = { "BcTree" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableBcTreeDictionary() {
  G__BcTreeDictionaryLN_TClass.tagnum = -1 ;
  G__BcTreeDictionaryLN_TBuffer.tagnum = -1 ;
  G__BcTreeDictionaryLN_TMemberInspector.tagnum = -1 ;
  G__BcTreeDictionaryLN_TObject.tagnum = -1 ;
  G__BcTreeDictionaryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__BcTreeDictionaryLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__BcTreeDictionaryLN_TClonesArray.tagnum = -1 ;
  G__BcTreeDictionaryLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__BcTreeDictionaryLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__BcTreeDictionaryLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__BcTreeDictionaryLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__BcTreeDictionaryLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__BcTreeDictionaryLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__BcTreeDictionaryLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__BcTreeDictionaryLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__BcTreeDictionaryLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__BcTreeDictionaryLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__BcTreeDictionaryLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__BcTreeDictionaryLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__BcTreeDictionaryLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__BcTreeDictionaryLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__BcTreeDictionaryLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__BcTreeDictionaryLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__BcTreeDictionaryLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__BcTreeDictionaryLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__BcTreeDictionaryLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__BcTreeDictionaryLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__BcTreeDictionaryLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__BcTreeDictionaryLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__BcTreeDictionaryLN_TLorentzVector.tagnum = -1 ;
  G__BcTreeDictionaryLN_TRefArray.tagnum = -1 ;
  G__BcTreeDictionaryLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__BcTreeDictionaryLN_BcTreeCand.tagnum = -1 ;
  G__BcTreeDictionaryLN_BcTreeGENCand.tagnum = -1 ;
  G__BcTreeDictionaryLN_JpsiCand.tagnum = -1 ;
  G__BcTreeDictionaryLN_BcTreeHeader.tagnum = -1 ;
  G__BcTreeDictionaryLN_BcTree.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableBcTreeDictionary() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__BcTreeDictionaryLN_TClass);
   G__get_linked_tagnum_fwd(&G__BcTreeDictionaryLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__BcTreeDictionaryLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__BcTreeDictionaryLN_TObject);
   G__get_linked_tagnum_fwd(&G__BcTreeDictionaryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__BcTreeDictionaryLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__BcTreeDictionaryLN_TClonesArray);
   G__get_linked_tagnum_fwd(&G__BcTreeDictionaryLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__BcTreeDictionaryLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__BcTreeDictionaryLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__BcTreeDictionaryLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__BcTreeDictionaryLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__BcTreeDictionaryLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__BcTreeDictionaryLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__BcTreeDictionaryLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__BcTreeDictionaryLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__BcTreeDictionaryLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__BcTreeDictionaryLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__BcTreeDictionaryLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__BcTreeDictionaryLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__BcTreeDictionaryLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__BcTreeDictionaryLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__BcTreeDictionaryLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__BcTreeDictionaryLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__BcTreeDictionaryLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__BcTreeDictionaryLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__BcTreeDictionaryLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__BcTreeDictionaryLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__BcTreeDictionaryLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__BcTreeDictionaryLN_TLorentzVector);
   G__get_linked_tagnum_fwd(&G__BcTreeDictionaryLN_TRefArray);
   G__get_linked_tagnum_fwd(&G__BcTreeDictionaryLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BcTreeDictionaryLN_BcTreeCand),sizeof(BcTreeCand),-1,63232,(char*)NULL,G__setup_memvarBcTreeCand,G__setup_memfuncBcTreeCand);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BcTreeDictionaryLN_BcTreeGENCand),sizeof(BcTreeGENCand),-1,29952,(char*)NULL,G__setup_memvarBcTreeGENCand,G__setup_memfuncBcTreeGENCand);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BcTreeDictionaryLN_JpsiCand),sizeof(JpsiCand),-1,63232,(char*)NULL,G__setup_memvarJpsiCand,G__setup_memfuncJpsiCand);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BcTreeDictionaryLN_BcTreeHeader),sizeof(BcTreeHeader),-1,1280,"Event Header",G__setup_memvarBcTreeHeader,G__setup_memfuncBcTreeHeader);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BcTreeDictionaryLN_BcTree),sizeof(BcTree),-1,29952,"Event structure",G__setup_memvarBcTree,G__setup_memfuncBcTree);
}
extern "C" void G__cpp_setupBcTreeDictionary(void) {
  G__check_setup_version(30051515,"G__cpp_setupBcTreeDictionary()");
  G__set_cpp_environmentBcTreeDictionary();
  G__cpp_setup_tagtableBcTreeDictionary();

  G__cpp_setup_inheritanceBcTreeDictionary();

  G__cpp_setup_typetableBcTreeDictionary();

  G__cpp_setup_memvarBcTreeDictionary();

  G__cpp_setup_memfuncBcTreeDictionary();
  G__cpp_setup_globalBcTreeDictionary();
  G__cpp_setup_funcBcTreeDictionary();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncBcTreeDictionary();
  return;
}
class G__cpp_setup_initBcTreeDictionary {
  public:
    G__cpp_setup_initBcTreeDictionary() { G__add_setup_func("BcTreeDictionary",(G__incsetup)(&G__cpp_setupBcTreeDictionary)); G__call_setup_funcs(); }
   ~G__cpp_setup_initBcTreeDictionary() { G__remove_setup_func("BcTreeDictionary"); }
};
G__cpp_setup_initBcTreeDictionary G__cpp_setup_initializerBcTreeDictionary;

